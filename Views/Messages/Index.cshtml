@model WebApplication.Models.ViewModels.MessageViewModel

@{
	ViewData["Title"] = "Read";
}

<h1>Read</h1>

@if (Model.Messages != null)
{
	<table class="table">
		<thead>
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.Messages[0].Title)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Messages[0].Created)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Messages[0].CreatedByUsername)
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model.Messages)
			{
				string unreadMessage = "";
				if (item.Status == false)
				{
					unreadMessage = "table-success";
				}
				<tr class="@unreadMessage">
					<td>
						@Html.DisplayFor(modelItem => item.Title)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Created)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.CreatedByUsername)
					</td>
					<td>
						@Html.ActionLink("Select", "Index", new { selectedMessage = item.Id })
					</td>
				</tr>
			}
		</tbody>
	</table>
}

@if (Model.Message != null)
{

	<dl class="row">
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Message.Title)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Message.Title)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Message.Content)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Message.Content)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Message.Created)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Message.Created)
		</dd>

		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Message.CreatedByUsername)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Message.CreatedByUsername)
		</dd>
		<dt class="col-sm-2">

		</dt>
		<dd class="col-sm-10">
			<form asp-action="Delete" asp-route-id="@Model.Message.Id">
				<input type="hidden" asp-for="@Model.Message.Id" />
				<input type="submit" value="Delete" class="btn btn-danger" />
			</form>
		</dd>

	</dl>
}

<p>Number of messages: @Model.numberOfTotalMessages</p>
